import React from "react";

//material ui
import { makeStyles } from "@material-ui/styles";
import { Grid, Typography } from "@material-ui/core";

//components

//utils
import Utils from "../utils";
//constants
import { severities } from "../constants";

const { High, Low, Medium } = severities;

const useStyles = makeStyles(() => ({
  leftDetails: {
    paddingTop: "10px",
  },
  gridStyle: {
    paddingTop: "20px",
    paddingBottom: "40px",
    borderTop: "2px solid #000000",
    marginTop: "30px",
  },
  severityStyleHigh: {
    backgroundColor: "#CC4F19",
    color: "white",
    marginRight: "0px",
    borderRadius: "5px",
    width: "80px",
  },
  severityStyleLow: {
    backgroundColor: "#86859D",
    color: "white",
    marginRight: "0px",
    borderRadius: "5px",
    width: "80px",
  },
  severityStyleMedium: {
    backgroundColor: "#D68100",
    color: "white",
    marginRight: "0px",
    borderRadius: "5px",
    width: "80px",
  },
  severityStyleCritical: {
    backgroundColor: "#BFBFBF",
    color: "white",
    marginRight: "0px",
    borderRadius: "5px",
    width: "80px",
  },
}));

const VulnerabilityBoxToPrint = ({ vulnerability }) => {
  const classes = useStyles();
  const { list, metadata } = vulnerability;
  const {
    cvssScore,
    description,
    fixedIn,
    id,
    identifiers,
    moduleName,
    severity,
    title,
    version,
    state,
    comment,
  } = metadata;

  const commentAdded = comment === null ? "" : comment;

  return (
    <Grid container className={classes.gridStyle}>
      <Grid xs={12} style={{ paddingBottom: "20px" }}>
        <Typography variant="h6">
          <b>{title}</b>
        </Typography>
      </Grid>
      <Grid xs={4} style={{ borderRight: "1px solid #000000" }}>
        <Grid xs={12} className={classes.leftDetails}>
          <Typography>
            <b>Title</b>
          </Typography>
          <Typography>{title}</Typography>
        </Grid>
        <Grid xs={12} className={classes.leftDetails}>
          <Typography>
            <b>CvssScore</b>
          </Typography>
          <Typography>{cvssScore}</Typography>
        </Grid>
        <Grid xs={12} className={classes.leftDetails}>
          <Typography>
            <b>Identifier</b>
          </Typography>
          {Utils.getIdentifiers(identifiers).map((identifier, index) => (
            <Typography>{` ${identifier} `}</Typography>
          ))}
        </Grid>
        <Grid xs={12} className={classes.leftDetails}>
          <Typography>
            <b>Severity</b>
          </Typography>
          <Typography
            align="center"
            variant="subtitle1"
            className={
              severity === High
                ? classes.severityStyleHigh
                : severity === Medium
                ? classes.severityStyleMedium
                : severity === Low
                ? classes.severityStyleLow
                : classes.severityStyleCritical
            }
          >
            {severity[0].toUpperCase() + severity.substring(1)}
          </Typography>
        </Grid>
        <Grid xs={12} className={classes.leftDetails}>
          <Typography>
            <b>Id</b>
          </Typography>
          <Typography>{`${id}`}</Typography>
        </Grid>
        <Grid xs={12} className={classes.leftDetails}>
          <Typography>
            <b>State</b>
          </Typography>
          <Typography>{state[0].toUpperCase() + state.substring(1)}</Typography>
        </Grid>
        <Grid xs={12} className={classes.leftDetails}>
          {commentAdded ? (
            <>
              <Typography>
                <b>Comment</b>
              </Typography>
              <Typography>{comment}</Typography>
            </>
          ) : (
            <></>
          )}
        </Grid>
      </Grid>
      <Grid xs={8} style={{ paddingLeft: "15px" }}>
        <Grid xs={12} className={classes.leftDetails}>
          <Typography>
            <b>Vulnerable module</b>
          </Typography>
          <Typography>{`${moduleName}@${version}`}</Typography>
        </Grid>
        <Grid xs={12} className={classes.leftDetails}>
          <Typography>
            <b>Fixed in</b>
          </Typography>
          <Typography>{Utils.getFixedIn(fixedIn, moduleName)}</Typography>
        </Grid>
        <Grid xs={12} className={classes.leftDetails}>
          <Typography>
            <b>Introduced through</b>
          </Typography>
          {Utils.getFrom(list).map((from, index) => (
            <Typography>{Utils.findIntroducedPath(from)}</Typography>
          ))}
        </Grid>
        <Typography
          dangerouslySetInnerHTML={{
            __html: Utils.getOverview(description),
          }}
        />
        <Typography
          dangerouslySetInnerHTML={{
            __html: Utils.getRemediation(description, fixedIn),
          }}
        />
      </Grid>
    </Grid>
  );
};

export default VulnerabilityBoxToPrint;
