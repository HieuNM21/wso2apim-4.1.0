import React from "react";
import {
  Dialog,
  DialogTitle,
  DialogContent,
  makeStyles,
  Typography,
  Button,
  Grid,
} from "@material-ui/core";
import { CloseRounded } from "@material-ui/icons";
import { Link as RouterLink } from "react-router-dom";

var moment = require("moment");
moment().format();

const useStyles = makeStyles((theme) => ({
  dialogWrapper: {
    padding: theme.spacing(2),
    position: "absolute",
    top: theme.spacing(5),
  },
  dialogTitle: {
    paddingRight: "0px",
  },
}));

export default function AlertPopup(props) {
  const { open, setOpen, portal, date, branch } = props;
  const classes = useStyles();
  const formattedDate = moment(date).format("MMMM Do YYYY, h:mm:ss a");
  const portalName = portal[0].toUpperCase() + portal.substring(1);
  const branchName = branch[0].toUpperCase() + branch.substring(1);

  return (
    <Dialog
      open={open}
      maxWidth="md"
      classes={{ paper: classes.dialogWrapper }}
    >
      <DialogTitle className={classes.dialogTitle}>
        <Grid container spacing={3} style={{}}>
          <Grid item xs={11}></Grid>
          <Grid item xs={1}>
            <Button color="secondary" component={RouterLink} to="/">
              <CloseRounded />
            </Button>
          </Grid>
        </Grid>
      </DialogTitle>
      <DialogContent dividers>
        <Grid container spacing={3} style={{}}>
          <Grid item xs={12}>
            <Typography variant="h6" component="div" style={{ flexGrow: 1 }}>
              {`${portalName} portal of ${branchName} branch  was scanned on ${formattedDate}.If it is not recently scanned,You need to scan it using the CLI. `}
            </Typography>
          </Grid>

          <Grid item xs={12}>
            <Typography variant="h6">
              <b>Do you want to continue?</b>
            </Typography>
          </Grid>
          <Grid item xs={1}>
            <Button
              style={{ backgroundColor: "#3f50b5", color: "white" }}
              variant="contained"
              onClick={() => setOpen(false)}
            >
              Yes
            </Button>
          </Grid>
          <Grid item xs={1}>
            <Button
              color="secondary"
              variant="contained"
              component={RouterLink}
              to="/"
            >
              No
            </Button>
          </Grid>
        </Grid>
      </DialogContent>
    </Dialog>
  );
}
