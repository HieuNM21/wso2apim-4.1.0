import React, { useState, useEffect } from "react";
import { makeStyles } from "@material-ui/styles";

//material
import {
  Grid,
  Select,
  MenuItem,
  Button,
  Card,
  AppBar,
  FormControl,
  InputLabel,
  Typography,
  useTheme,
  useMediaQuery,
} from "@material-ui/core";

import { Toaster } from "react-hot-toast";
import { useNavigate } from "react-router-dom";

import logo from "../assets/wso2_logo.png";

//components
import Alert from "../components/Alert";

//constants
import { portals } from "../constants";

//Service
import VulnerabilityService from "../services/VulnerabilityService";

const useStyles = makeStyles(() => ({
  buttonStyle: {
    width: "30%",
    height: "3.9rem",
    cursor: "pointer",
    backgroundColor: "#FF7300",
    color: "white",
    fontSize: "2rem",
    border: 0,
    marginTop: "3rem",
    textTransform: "capitalize",
  },
  welcomeText: {
    marginBottom: "20px",
  },

  selectStyle: {
    width: "30%",
    margin: "10px",
  },
  cardStyle: {
    boxShadow: "none",
    textAlign: "center",
    color: "black",
    backgroundColor: "white",
    marginTop: "10rem",
  },
  titleStyle: {
    lineHeight: "2.5",
    fontSize: "28px",
    position: "absolute",
    right: "30px",
    color: "white",
  },
  logoStyle: { height: "undefined", width: "100px" },
  gridStyle: { alignSelf: "center", margin: "15px", marginLeft: "30px" },
  appBarStyle: { height: "70px" },
}));

const Home = () => {
  const classes = useStyles();
  const navigate = useNavigate();
  const [portal, setPortal] = useState("");
  const [branch, setBranch] = useState("main");
  const [branches, setBranches] = useState([]);

  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down("md"));

  const handleBranchSelect = (event) => {
    setBranch(event.target.value);
  };

  const handlePortalSelect = (event) => {
    setPortal(event.target.value);
  };

  const handleClick = () => {
    if (portal === "") {
      Alert.error("Portal is not selected.");
    } else {
      navigate(`vulnerabilities/${branch}/${portal}`, {
        state: { branches: branches },
        replace: true,
      });
    }
  };

  useEffect(() => {
    const fetchBranches = async () => {
      try {
        const response = await VulnerabilityService.getBranches();
        setBranches(response.data);
      } catch (error) {
        console.log(error);
      }
    };
    fetchBranches();
  }, [branches]);

  return (
    <>
      <div>
        <Toaster />
      </div>

      <AppBar position="static" color="primary" className={classes.appBarStyle}>
        <Grid container>
          <Grid xs={12} md={1} className={classes.gridStyle}>
            <img src={logo} className={classes.logoStyle} alt="Wso2" />
          </Grid>
          {!isMobile ? (
            <Grid xs={12} md={9}>
              <Typography component="div" className={classes.titleStyle}>
                <b>Security Vulnerability Analyzer</b>
              </Typography>
            </Grid>
          ) : (
            <></>
          )}
        </Grid>
      </AppBar>
      <Grid columnSpacing={{ xs: 1, sm: 2, md: 3 }}>
        <Card className={classes.cardStyle}>
          <Typography className={classes.welcomeText} variant="h3">
            Welcome to Security Vulnerability Analyzer!
          </Typography>
          <Typography variant="h5">Select a portal to Analyze</Typography>
          <Grid xs={12}>
            <FormControl className={classes.selectStyle}>
              <InputLabel>Portal</InputLabel>
              <Select
                labelId="demo-simple-select-label"
                id="demo-simple-select"
                value={portal}
                label="Portal"
                inputlabelprops={{
                  shrink: true,
                }}
                onChange={handlePortalSelect}
              >
                {portals.map((portal, index) => {
                  return (
                    <MenuItem value={portal}>
                      {portal[0].toUpperCase() + portal.substring(1)}
                    </MenuItem>
                  );
                })}
              </Select>
            </FormControl>
          </Grid>
          <Grid xs={12}>
            <FormControl className={classes.selectStyle}>
              <InputLabel>Branch</InputLabel>
              <Select
                labelId="demo-simple-select-label"
                id="demo-simple-select"
                value={branch}
                label="Branch"
                inputlabelprops={{
                  shrink: true,
                }}
                onChange={handleBranchSelect}
              >
                {branches.map((branch, index) => {
                  return (
                    <MenuItem key={index} value={branch}>
                      {branch}
                    </MenuItem>
                  );
                })}
              </Select>
            </FormControl>
          </Grid>

          <Button
            onClick={handleClick}
            variant="contained"
            className={classes.buttonStyle}
          >
            Analyze
          </Button>
        </Card>
      </Grid>
    </>
  );
};

export default Home;
